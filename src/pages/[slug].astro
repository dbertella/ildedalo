---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.jsx';
import Footer from '../components/Footer.jsx';
import axios from 'axios';
import fs from 'fs';
import path from 'path';
import { WORDPRESS_API_BASE } from '../config/wordpress.js';
import { downloadImage } from '../utils/imageUtils.js';

const { slug } = Astro.params;

// Define types for WordPress response
interface WordPressContent {
  ID: number;
  title: string;
  content: string;
  excerpt: string;
  date: string;
  modified: string;
  slug: string;
  featured_image?: string;
  type: 'post' | 'page';
}



let contentData: WordPressContent | null = null;
let localImages: Record<string, string> = {};



try {
  // First try to fetch as a post
  console.log(`Trying to fetch post with slug: ${slug}`);
  const { data: rawPost } = await axios.get(`${WORDPRESS_API_BASE}/posts/slug:${slug}`);
  
  if (rawPost) {
    const post = rawPost as any;
    contentData = {
      ID: post.ID,
      title: post.title || '',
      content: post.content || '',
      excerpt: post.excerpt || '',
      date: post.date,
      modified: post.modified,
      slug: post.slug,
      featured_image: (post.featured_image ?? '') as string,
      type: 'post'
    };
    console.log(`Successfully fetched post with slug ${slug} from WordPress.com API`);
  }
} catch (postError) {
  console.log(`Post not found, trying as page: ${slug}`);
  
  try {
    // Try to fetch as a page
    const { data: rawPage } = await axios.get(`${WORDPRESS_API_BASE}/pages/slug:${slug}`);
    
    if (rawPage) {
      const page = rawPage as any;
      contentData = {
        ID: page.ID,
        title: page.title || '',
        content: page.content || '',
        excerpt: page.excerpt || '',
        date: page.date,
        modified: page.modified,
        slug: page.slug,
        featured_image: (page.featured_image ?? '') as string,
        type: 'page'
      };
      console.log(`Successfully fetched page with slug ${slug} from WordPress.com API`);
    }
  } catch (pageError) {
    console.log(`Page not found, redirecting to 404 for: ${slug}`);
    return Astro.redirect('/404');
  }
}

// Process images if we have content
if (contentData && contentData.content) {
  // Find all image URLs in the content
  const imgRegex = /<img[^>]+src=["']([^"'>]+)["'][^>]*>/g;
  let match;
  let newContent = contentData.content;
  
  while ((match = imgRegex.exec(contentData.content)) !== null) {
    const imgUrl = match[1] as string;
    const imgName = path.basename(imgUrl.split('?')[0]);
    const localPath = path.join(process.cwd(), 'public', imgName);
    const publicPath = `/${imgName}`;
    
    // Download if not already present
    if (!fs.existsSync(localPath)) {
      try {
        await downloadImage(imgUrl, localPath);
        console.log(`Downloaded image: ${imgName}`);
      } catch (e) {
        console.error('Failed to download image:', imgUrl, e);
      }
    }
    
    localImages[imgUrl] = publicPath;
    // Replace src in content
    newContent = newContent.replace(new RegExp(imgUrl, 'g'), publicPath);
  }
  
  contentData.content = newContent;
}
---

<Layout 
  title={`${contentData?.title || "Pagina"} - Il Dedalo ðŸŒ¿ Soul Space`}
  description={contentData?.excerpt || "Il Dedalo Ã¨ uno spazio per l'anima, la creativitÃ , la cura e la bellezza di condividere."}
  url={`https://ildedalo.com/${slug}`}
>
  <Header slot="header" client:load />
  <div class="main-content">
    {contentData && (
      <div class="post-content" set:html={contentData.content} />
    )}
  </div>
  <Footer slot="footer" />
</Layout>
