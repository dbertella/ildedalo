---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.jsx";
import Footer from "../components/Footer.jsx";
import FeatureImage from "../components/FeatureImage.jsx";
import fs from "fs";
import path from "path";
import { downloadImage } from "../utils/imageUtils.js";
import { fetchPost } from "../utils/postUtils.js";
import Link from "../components/Link";

const { slug } = Astro.params;

// Define types for WordPress response
interface WordPressContent {
  ID: number;
  title: string;
  content: string;
  excerpt: string;
  date: string;
  modified: string;
  slug: string;
  featured_image?: string;
  type: "post" | "page";
  parent: {
    ID: number;
    title: string;
    link: string;
    type: string;
  };
}

let contentData: WordPressContent | null = null;
let localImages: Record<string, string> = {};

try {
  // Fetch post using optimized utility
  contentData = await fetchPost(slug);
} catch (postError) {
  console.log(`Post not found, redirecting to 404 for: ${slug}`);
  return Astro.redirect("/404");
}

// Process images if we have content
if (contentData && contentData.content) {
  // Find all image URLs in the content
  const imgRegex = /<img[^>]+src=["']([^"'>]+)["'][^>]*>/g;
  let match;
  let newContent = contentData.content;

  while ((match = imgRegex.exec(contentData.content)) !== null) {
    const imgUrl = match[1] as string;
    const imgName = path.basename(imgUrl.split("?")[0]);
    const localPath = path.join(process.cwd(), "public", imgName);
    const publicPath = `/${imgName}`;

    // Download if not already present
    if (!fs.existsSync(localPath)) {
      try {
        await downloadImage(imgUrl, localPath);
        console.log(`Downloaded image: ${imgName}`);
      } catch (e) {
        console.error("Failed to download image:", imgUrl, e);
      }
    }

    localImages[imgUrl] = publicPath;
    // Replace src in content
    newContent = newContent.replace(new RegExp(imgUrl, "g"), publicPath);
  }

  contentData.content = newContent;
}
---

<Layout
  title={`${contentData?.title || "Pagina"} - Il Dedalo ðŸŒ¿ Soul Space`}
  description={contentData?.excerpt ||
    "Il Dedalo Ã¨ uno spazio per l'anima, la creativitÃ , la cura e la bellezza di condividere."}
  url={`https://ildedalo.com/${slug}`}
>
  <Header slot="header" client:load />

  <FeatureImage
    imageUrl={contentData?.featured_image}
    title={contentData?.title || "Il Dedalo ðŸŒ¿ Soul Space"}
    client:load
  />

  <div class="main-content">
    {contentData && <div class="post-content" set:html={contentData.content} />}
    {
      contentData?.parent && (
        <div class="back-to-parent">
          <Link href='/i-nostri-corsi' className="back-to-parent-link">
            Torna a i nostri corsi
          </Link>
        </div>
      )
    }
  </div>

  <Footer slot="footer" />
</Layout>
